name: api-test

on:
  push:
    branches:
      - main
jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      TZ: "Asia/Tokyo"
    services:
      mysql:
        image: mysql:5.6
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testdb
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - "5306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - run: go version
      - uses: actions/cache@v2.1.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get dependencies
        run: |
          cd backend/cmd/api && go build main.go && ./main
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: newman install
        if: contains(github.event_name, 'push')
        run: sudo npm install -g newman

      - name: setup
        if: contains(github.event_name, 'push')
        run: curl https://api.getpostman.com/collections/$POSTMAN_COLLECTION_ID?apikey=$POSTMAN_API_KEY > api.json
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
          POSTMAN_COLLECTION_ID: ${{ secrets.POSTMAN_COLLECTION_ID }}

      - name: E2E Tests
        if: contains(github.event_name, 'push')
        run: newman run ./api.json

      - name: Cleanup
        if: always()
        run: rm -f ./api.json
