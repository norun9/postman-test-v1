name: api-test

on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      TZ: "Asia/Tokyo"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - run: go version
      - uses: actions/cache@v2.1.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup DB
        run: |
          cd backend/cmd/api && docker system prune -f && docker network create go_network && docker-compose up -d mysql
      - name: Sleep for 20 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: "20s"
      - name: Setup API
        run: |
          cd backend/cmd/api && docker-compose build go && docker-compose up -d go
      - name: Check Container
        run: cd backend/cmd/api && docker-compose logs && docker-compose ps -a
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Install Newman
        if: contains(github.event_name, 'push')
        run: sudo npm install -g newman
      - name: Fetch TestScript
        if: contains(github.event_name, 'push')
        run: curl https://api.getpostman.com/collections/$POSTMAN_COLLECTION_ID?apikey=$POSTMAN_API_KEY > api.json
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
          POSTMAN_COLLECTION_ID: ${{ secrets.POSTMAN_COLLECTION_ID }}
      - name: Postman Test
        if: contains(github.event_name, 'push')
        run: newman run ./api.json
      - name: Cleanup
        if: always()
        run: rm -f ./api.json
